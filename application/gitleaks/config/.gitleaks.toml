# This is the gitleaks configuration file.
# Here it is possible to add rules by using regex in order to find secrets like keys, urls etc.
# For more information please visit: https://github.com/zricethezav/gitleaks#configuration

# Just few links that might be useful for learning more and testing regex:
#
# 1) https://www.geeksforgeeks.org/write-regular-expressions => how to write a regular expression.
# 2) https://regex101.com => for testing regex. It also provides an explanation of the regex used.

title = "gitleaks config"

[[rules]]
id = "search-api-url"
description = "SEARCH_API_URL"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# search(.*)api(.*)[base|url](.*)[url|debug|production]? = identifier
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# [-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*) = URL that doesn't contain any http, https etc.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?search(.*)api(.*)[base|url](.*)[url|debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)['\"]?'''

[[rules]]
id = "search-api-secret-key"
description = "SEARCH_API_SECRET_KEY"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# search(.*)api(.*)secret(.*)[key|debug|production]? = identifier
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ([a-z0-9]{60}) = Secret. The value 60 in {60} is the number of characters of the secret.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?search(.*)api(.*)secret(.*)[key|debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?([a-z0-9]{60})['\"]?'''

[[rules]]
id = "image-fetcher-url"
description = "IMAGE_FETCHER_URL"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# image(.*)fetcher(.*)url(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*) = URL that may contain http, https, www etc.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?image(.*)fetcher(.*)url(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)['\"]?'''

[[rules]]
id = "ai-assets-url"
description = "AI_ASSETS_URL"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ai(.*)assets(.*)url(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*) = URL that may contain http, https, www etc.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?ai(.*)assets(.*)url(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)['\"]?'''


[[rules]]
id = "instabug-token"
description = "INSTABUG_TOKEN"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# instabug(.*)token(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ([a-z0-9]{32}) = Secret. The value 32 in {32} is the number of characters of the secret.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?instabug(.*)token(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?([a-z0-9]{32})['\"]?'''

[[rules]]
id = "amplitude-api-key"
description = "AMPLITUDE_API_KEY"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# amplitude(.*)api(.*)key(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ([a-z0-9]{32}) = Secret. The value 32 in {32} is the number of characters of the secret.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?amplitude(.*)api(.*)key(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?([a-z0-9]{32})['\"]?'''

[[rules]]
id = "appsflyer-key"
description = "APPSFLYER-KEY"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# appsflyer(.*)[dev]?(.*)key(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ([a-z0-9]{32}) = Secret. The value 32 in {32} is the number of characters of the secret.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?appsflyer(.*)[dev]?(.*)key(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?([a-z0-9]{32})['\"]?'''

[[rules]]
id = "app-store-numerical-id"
description = "APP_STORE_NUMERICAL_ID"
# (?i) = starts case-insensitive mode.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# app(.*)store(.*)numerical(.*)id(.*)[debug|production]? = identifier.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
# (\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*) = assignment symbol.
# ['\"]? = beginning string quotation. ? means that the previous character may or may not be present.
# ([0-9]+) = Secret. In this case the numerical id.
# ['\"]? = end string quotation. ? means that the previous character may or may not be present.
regex = '''(?i)['\"]?app(.*)store(.*)numerical(.*)id(.*)[debug|production]?['\"]?(\s*)(=|>|:=|\|\|:|<=|=>|:)(\s*)['\"]?([0-9]+)['\"]?'''