name: Post Merge Release to Internal/Release

on:
  push:
    branches:
      - main
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      param:
        description: 'Manually run releases choose one or many of: ios_internal, android_internal, none'
        required: true
        default: 'ios_internal android_internal'

env:
  flutter_channel: 'stable'
  flutter_version: '2.8.1'
  java_version: '12.x'
  ios_device: 'iPhone 11 Pro (14.5)'
  # Common environment variables used inside ./build_scripts files
  GITHUB_USERNAME: 'xayn-admin'
  # GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
  FASTLANE_SKIP_UPDATE_CHECK: '1'

jobs:
  test_and_publish:
    name: iOS, Android and Web distribution
    runs-on: macos-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: |
            /Users/runner/hostedtoolcache/flutter
            ~/application/ios/Pods
          key: ios-flutter-${{ env.flutter_version }}
          restore-keys: |
            ios-flutter-cache-

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      # - name: Analyze & unit test code
      #   run: ./run_all_checks.sh

      - name: Build and submit new internal Android version to app center
        timeout-minutes: 20
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPCENTER_ANDROID_INTERNAL_TOKEN: ${{ secrets.APPCENTER_ANDROID_INTERNAL_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.SEARCH_API_SECRET_DEBUG }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.SEARCH_API_SECRET_PRODUCTION }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          AMPLITUDE_API_KEY_DEBUG: ${{ secrets.AMPLITUDE_API_KEY_DEBUG }}
          AMPLITUDE_API_KEY_PRODUCTION: ${{ secrets.AMPLITUDE_API_KEY_PRODUCTION }}
        working-directory: ./application
        run: |
          fastlane publish platform:android build:release
        if: (github.event_name == 'push' && !contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.param, 'android_internal'))

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build and submit new internal iOS version to app center
        timeout-minutes: 20
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPCENTER_IOS_INTERNAL_TOKEN: ${{ secrets.APPCENTER_IOS_INTERNAL_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.SEARCH_API_SECRET_DEBUG }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.SEARCH_API_SECRET_PRODUCTION }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          AMPLITUDE_API_KEY_DEBUG: ${{ secrets.AMPLITUDE_API_KEY_DEBUG }}
          AMPLITUDE_API_KEY_PRODUCTION: ${{ secrets.AMPLITUDE_API_KEY_PRODUCTION }}
        working-directory: ./application
        run: |
          fastlane publish platform:ios build:release
        if: (github.event_name == 'push' && !contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.param, 'ios_internal'))

      # - name: Build and submit new release Android version to app center
      #   timeout-minutes: 20
      #   env:
      #     PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_RELEASE_PASSWORD }}
      #     APPCENTER_ANDROID_RELEASE_TOKEN: ${{ secrets.APPCENTER_ANDROID_RELEASE_TOKEN }}
      #   working-directory: ./xayn_search
      #   run: |
      #     build_scripts/build_android_for_release.sh -R -r
      #   if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.param, 'android_release'))

      # - name: Build and submit new release iOS version to app center
      #   timeout-minutes: 20
      #   env:
      #     PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_RELEASE_PASSWORD }}
      #     APPCENTER_IOS_RELEASE_TOKEN: ${{ secrets.APPCENTER_IOS_RELEASE_TOKEN }}
      #   working-directory: ./xayn_search
      #   run: |
      #     build_scripts/build_ios_for_release.sh -R -r
      #   if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && contains(github.event.inputs.param, 'ios_release'))
