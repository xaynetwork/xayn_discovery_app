name: UI Tests

on:
  push:
    branches:
      - '*'
  workflow_dispatch:

env:
  flutter_channel: 'stable'
  flutter_version: '3.0.2'
  java_version: '12.x'
  ios_device: 'iPhone 11'
  ios_os_version: '>=13.0'
  FASTLANE_SKIP_UPDATE_CHECK: '1'
  PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
  APPSTORE_API_KEY: ${{ secrets.APPSTORE_API_KEY }}
  APPCENTER_IOS_INTERNAL_TOKEN: ${{ secrets.APPCENTER_IOS_INTERNAL_TOKEN }}
  SEARCH_API_SECRET_DEBUG: ${{ secrets.SEARCH_API_SECRET_DEBUG }}
  SEARCH_API_SECRET_PRODUCTION: ${{ secrets.SEARCH_API_SECRET_PRODUCTION }}
  INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
  INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
  MIXPANEL_TOKEN_DEBUG: ${{ secrets.MIXPANEL_TOKEN_DEBUG }}
  MIXPANEL_TOKEN_PRODUCTION: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
  APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY }}
  REVENUE_CAT_SDK_KEY_ANDROID: ${{ secrets.REVENUE_CAT_SDK_KEY_ANDROID }}
  REVENUE_CAT_SDK_KEY_IOS: ${{ secrets.REVENUE_CAT_SDK_KEY_IOS }}
  PROFILES: ${{ secrets.PROFILES }}
  RCONFIG_ACCESS_KEY: ${{ secrets.RCONFIG_ACCESS_KEY }}
  RCONFIG_SECRET_KEY: ${{ secrets.RCONFIG_SECRET_KEY }}
  AIRSHIP_INTERNAL_KEY: ${{ secrets.AIRSHIP_INTERNAL_KEY }}
  AIRSHIP_INTERNAL_SECRET: ${{ secrets.AIRSHIP_INTERNAL_SECRET }}
  AIRSHIP_PROD_KEY: ${{ secrets.AIRSHIP_PROD_KEY }}
  AIRSHIP_PROD_SECRET: ${{ secrets.AIRSHIP_PROD_SECRET }}
  GOOGLE_SERVICES_INTERNAL_JSON: ${{ secrets.GOOGLE_SERVICES_INTERNAL_JSON }}
  GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
  JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}

concurrency:
  group: ${{ github.workflow }}-${{  github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ui-tests-ios:
    runs-on: macos-12
    steps:
      - name: Install Appium
        run: npm install -g appium

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Set up a Simulator
        uses: futureware-tech/simulator-action@v1
        with:
          model: ${{ env.ios_device }}
          os_version: ${{ env.ios_os_version }}

      - name: Open Simulator
        run:  "open -a Simulator.app"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - shell: bash
        run: sleep 2m

      - shell: bash
        run: xcrun simctl io booted screenshot screenshot.png
      - name: Upload screenshot
        uses: actions/upload-artifact@v3
        with:
          name: screenshot
          path: screenshot.png
      - name: Download Screenshots
        uses: actions/download-artifact@v3
        with:
          name: screenshot
        

#      - name: Run UI Tests
#        timeout-minutes: 60
#        working-directory: ./application
#        run:
#          fastlane run_automation platform:ios test_suite:debug

#  ui-tests-android:
#    runs-on: macos-latest
#    steps:
#      - name: Install Appium
#        run: npm install -g appium
#
#      - name: Install Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          channel: ${{ env.flutter_channel }}
#          flutter-version: ${{ env.flutter_version }}
#
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: '11'
#      - run: java -version
#
#      - name: Checkout
#        uses: actions/checkout@v2
#        with:
#          fetch-depth: 0
#
#      - name: Set up an Emulator
#        timeout-minutes: 60
#        uses: reactivecircus/android-emulator-runner@v2
#        with:
#          api-level: 29
#          script: cd application && fastlane run_automation platform:android test_suite:debug


#      - name: Run UI Tests
#        timeout-minutes: 60
#        working-directory: ./application
#        run:
#          fastlane run_automation platform:android