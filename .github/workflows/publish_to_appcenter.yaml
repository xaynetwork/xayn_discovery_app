name: Publish

on:
  push:
    branches:
      - main
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      android_internal:
        description: "Android Internal"
        required: false
        default: true
        type: boolean
      android_beta:
        description: "Android Beta"
        required: false
        default: false
        type: boolean
      ios_internal:
        description: "iOS Internal"
        required: false
        default: true
        type: boolean
      ios_beta:
        description: "iOS Beta"
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{  github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  flutter_channel: "stable"
  flutter_version: "3.0.2"
  java_version: "12.x"
  ios_device: "iPhone 11 Pro (14.5)"
  # Common environment variables used inside ./build_scripts files
  GITHUB_USERNAME: "xayn-admin"
  # GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
  FASTLANE_SKIP_UPDATE_CHECK: "1"
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_BLUE_DEPLOYMENT_WEBHOOK_URL }}

jobs:
  publish_ios_internal:
    name: Publish iOS Internal
    if: (github.event_name == 'push' && !contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.ios_internal == 'true')
    runs-on: macos-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa_github
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host github.com
              IdentityFile ~/.ssh/id_rsa_github
          if_key_exists: replace

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: |
            /Users/runner/hostedtoolcache/flutter
            ~/application/ios/Pods
          key: ios-flutter-${{ env.flutter_version }}
          restore-keys: |
            ios-flutter-cache-

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            build-pubspec-

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build and submit new internal iOS version to app center
        timeout-minutes: 60
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPSTORE_API_KEY: ${{ secrets.APPSTORE_API_KEY }}
          APPCENTER_IOS_INTERNAL_TOKEN: ${{ secrets.APPCENTER_IOS_INTERNAL_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.TV_POC_API_SECRET }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.TV_POC_API_SECRET }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          MIXPANEL_TOKEN_DEBUG: ${{ secrets.MIXPANEL_TOKEN_DEBUG }}
          MIXPANEL_TOKEN_PRODUCTION: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
          APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY }}
          REVENUE_CAT_SDK_KEY_ANDROID: ${{ secrets.REVENUE_CAT_SDK_KEY_ANDROID }}
          REVENUE_CAT_SDK_KEY_IOS: ${{ secrets.REVENUE_CAT_SDK_KEY_IOS }}
          PROFILES: ${{ secrets.PROFILES }}
          AIRSHIP_INTERNAL_KEY: ${{ secrets.AIRSHIP_INTERNAL_KEY }}
          AIRSHIP_INTERNAL_SECRET: ${{ secrets.AIRSHIP_INTERNAL_SECRET }}
          AIRSHIP_PROD_KEY: ${{ secrets.AIRSHIP_PROD_KEY }}
          AIRSHIP_PROD_SECRET: ${{ secrets.AIRSHIP_PROD_SECRET }}
          RCONFIG_ACCESS_KEY: ${{ secrets.RCONFIG_ACCESS_KEY }}
          RCONFIG_SECRET_KEY: ${{ secrets.RCONFIG_SECRET_KEY }}
          GOOGLE_SERVICES_INTERNAL_JSON: ${{ secrets.GOOGLE_SERVICES_INTERNAL_JSON }}
          GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
        working-directory: ./application
        run: |
          fastlane publish platform:ios build_type:release download_profile:true flavor:internal

  publish_ios_beta:
    outputs:
      message: ${{ env.SLACK_MESSAGE  || 'Build Failed'  }}
      status: ${{ env.SLACK_STATUS || 'failure' }}
    name: Publish iOS Beta
    if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.ios_beta == 'true')
    runs-on: macos-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa_github
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host github.com
              IdentityFile ~/.ssh/id_rsa_github
          if_key_exists: replace

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache Flutter dependencies
        uses: actions/cache@v2
        with:
          path: |
            /Users/runner/hostedtoolcache/flutter
            ~/application/ios/Pods
          key: ios-flutter-${{ env.flutter_version }}
          restore-keys: |
            ios-flutter-cache-

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            build-pubspec-

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build and submit new internal iOS version to app center
        timeout-minutes: 60
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPSTORE_API_KEY: ${{ secrets.APPSTORE_API_KEY }}
          APPCENTER_IOS_BETA_TOKEN: ${{ secrets.APPCENTER_IOS_BETA_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.TV_POC_API_SECRET }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.TV_POC_API_SECRET }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          MIXPANEL_TOKEN_DEBUG: ${{ secrets.MIXPANEL_TOKEN_DEBUG }}
          MIXPANEL_TOKEN_PRODUCTION: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
          APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY }}
          REVENUE_CAT_SDK_KEY_ANDROID: ${{ secrets.REVENUE_CAT_SDK_KEY_ANDROID }}
          REVENUE_CAT_SDK_KEY_IOS: ${{ secrets.REVENUE_CAT_SDK_KEY_IOS }}
          PROFILES: ${{ secrets.PROFILES }}
          AIRSHIP_INTERNAL_KEY: ${{ secrets.AIRSHIP_INTERNAL_KEY }}
          AIRSHIP_INTERNAL_SECRET: ${{ secrets.AIRSHIP_INTERNAL_SECRET }}
          AIRSHIP_PROD_KEY: ${{ secrets.AIRSHIP_PROD_KEY }}
          AIRSHIP_PROD_SECRET: ${{ secrets.AIRSHIP_PROD_SECRET }}
          RCONFIG_ACCESS_KEY: ${{ secrets.RCONFIG_ACCESS_KEY }}
          RCONFIG_SECRET_KEY: ${{ secrets.RCONFIG_SECRET_KEY }}
          GOOGLE_SERVICES_INTERNAL_JSON: ${{ secrets.GOOGLE_SERVICES_INTERNAL_JSON }}
          GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
        working-directory: ./application
        run: |
          fastlane publish platform:ios build_type:release download_profile:true flavor:beta store:true
          echo "SLACK_MESSAGE=$( cat report.log )" >> $GITHUB_ENV
          echo "SLACK_STATUS=success" >> $GITHUB_ENV

  publish_android_internal:
    name: Publish Android Internal
    if: (github.event_name == 'push' && !contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.android_internal  == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa_github
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host github.com
              IdentityFile ~/.ssh/id_rsa_github
          if_key_exists: replace

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            build-pubspec-

      - name: Fix fastlane permissions
        run: sudo chmod -R a+w /var/lib/gems/

      - name: Build and submit new internal Android version to app center
        timeout-minutes: 60
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPCENTER_ANDROID_INTERNAL_TOKEN: ${{ secrets.APPCENTER_ANDROID_INTERNAL_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.TV_POC_API_SECRET }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.TV_POC_API_SECRET }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          MIXPANEL_TOKEN_DEBUG: ${{ secrets.MIXPANEL_TOKEN_DEBUG }}
          MIXPANEL_TOKEN_PRODUCTION: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
          APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY }}
          REVENUE_CAT_SDK_KEY_ANDROID: ${{ secrets.REVENUE_CAT_SDK_KEY_ANDROID }}
          REVENUE_CAT_SDK_KEY_IOS: ${{ secrets.REVENUE_CAT_SDK_KEY_IOS }}
          ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
          AIRSHIP_INTERNAL_KEY: ${{ secrets.AIRSHIP_INTERNAL_KEY }}
          AIRSHIP_INTERNAL_SECRET: ${{ secrets.AIRSHIP_INTERNAL_SECRET }}
          AIRSHIP_PROD_KEY: ${{ secrets.AIRSHIP_PROD_KEY }}
          AIRSHIP_PROD_SECRET: ${{ secrets.AIRSHIP_PROD_SECRET }}
          RCONFIG_ACCESS_KEY: ${{ secrets.RCONFIG_ACCESS_KEY }}
          RCONFIG_SECRET_KEY: ${{ secrets.RCONFIG_SECRET_KEY }}
          GOOGLE_SERVICES_INTERNAL_JSON: ${{ secrets.GOOGLE_SERVICES_INTERNAL_JSON }}
          GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
        working-directory: ./application
        run: |
          fastlane publish platform:android build_type:release flavor:internal

  publish_android_beta:
    outputs:
      message: ${{ env.SLACK_MESSAGE  || 'Build Failed'  }}
      status: ${{ env.SLACK_STATUS || 'failure' }}
    name: Publish Android Beta
    if: (github.event_name == 'push' && contains(github.ref, 'refs/tags/')) || (github.event_name == 'workflow_dispatch' && github.event.inputs.android_beta  == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          name: id_rsa_github
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          config: |
            Host github.com
              IdentityFile ~/.ssh/id_rsa_github
          if_key_exists: replace

      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.flutter_channel }}
          flutter-version: ${{ env.flutter_version }}

      - name: Cache pubspec dependencies
        uses: actions/cache@v2
        with:
          path: |
            ${{ env.PUB_CACHE }}
            **/.packages
            **/.flutter-plugins
            **/.flutter-plugin-dependencies
            **/.dart_tool/package_config.json
          key: build-pubspec-${{ hashFiles('**/pubspec.yaml') }}
          restore-keys: |
            build-pubspec-

      - name: Fix fastlane permissions
        run: sudo chmod -R a+w /var/lib/gems/

      - name: Build and submit new internal Android version to app center
        timeout-minutes: 60
        env:
          PROVISIONING_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          APPCENTER_ANDROID_BETA_TOKEN: ${{ secrets.APPCENTER_ANDROID_BETA_TOKEN }}
          SEARCH_API_SECRET_DEBUG: ${{ secrets.TV_POC_API_SECRET }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.TV_POC_API_SECRET }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          MIXPANEL_TOKEN_DEBUG: ${{ secrets.MIXPANEL_TOKEN_DEBUG }}
          MIXPANEL_TOKEN_PRODUCTION: ${{ secrets.MIXPANEL_TOKEN_PRODUCTION }}
          APPSFLYER_DEV_KEY: ${{ secrets.APPSFLYER_DEV_KEY }}
          REVENUE_CAT_SDK_KEY_ANDROID: ${{ secrets.REVENUE_CAT_SDK_KEY_ANDROID }}
          REVENUE_CAT_SDK_KEY_IOS: ${{ secrets.REVENUE_CAT_SDK_KEY_IOS }}
          ANDROID_RELEASE_KEYSTORE: ${{ secrets.ANDROID_RELEASE_KEYSTORE }}
          AIRSHIP_INTERNAL_KEY: ${{ secrets.AIRSHIP_INTERNAL_KEY }}
          AIRSHIP_INTERNAL_SECRET: ${{ secrets.AIRSHIP_INTERNAL_SECRET }}
          AIRSHIP_PROD_KEY: ${{ secrets.AIRSHIP_PROD_KEY }}
          AIRSHIP_PROD_SECRET: ${{ secrets.AIRSHIP_PROD_SECRET }}
          RCONFIG_ACCESS_KEY: ${{ secrets.RCONFIG_ACCESS_KEY }}
          RCONFIG_SECRET_KEY: ${{ secrets.RCONFIG_SECRET_KEY }}
          GOOGLE_SERVICES_INTERNAL_JSON: ${{ secrets.GOOGLE_SERVICES_INTERNAL_JSON }}
          GOOGLE_SERVICES_PROD_JSON: ${{ secrets.GOOGLE_SERVICES_PROD_JSON }}
          JFROG_TOKEN: ${{ secrets.JFROG_TOKEN }}
        working-directory: ./application
        run: |
          fastlane publish platform:android build_type:release flavor:beta store:true
          echo "SLACK_MESSAGE=$( cat report.log )" >> $GITHUB_ENV
          echo "SLACK_STATUS=success" >> $GITHUB_ENV

  slack-notification-android-beta:
    needs: publish_android_beta
    uses: ./.github/workflows/slack-notification.yaml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      message: ${{ needs.publish_android_beta.outputs.message }}
      status: ${{ needs.publish_android_beta.outputs.status }}

  slack-notification-ios-beta:
    needs: publish_ios_beta
    uses: ./.github/workflows/slack-notification.yaml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    with:
      message: ${{ needs.publish_ios_beta.outputs.message  }}
      status: ${{ needs.publish_ios_beta.outputs.status }}
