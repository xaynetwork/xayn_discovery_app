name: Basic checks

env:
  FLUTTER_VERSION: '2.8.1'

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'

jobs:
  Basic-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - uses: actions/checkout@v2

      - name: Install Flutter
        uses: britannio/action-install-flutter@v1
        with:
          version: $FLUTTER_VERSION

      - name: Install lcov and jq
        run: |
          sudo apt install lcov jq

      - name: Run checks
        env:
          SEARCH_API_SECRET_DEBUG: ${{ secrets.SEARCH_API_SECRET_DEBUG }}
          SEARCH_API_SECRET_PRODUCTION: ${{ secrets.SEARCH_API_SECRET_PRODUCTION }}
          INSTABUG_TOKEN_DEBUG: ${{ secrets.INSTABUG_TOKEN_DEBUG }}
          INSTABUG_TOKEN_PRODUCTION: ${{ secrets.INSTABUG_TOKEN_PRODUCTION }}
          AMPLITUDE_API_KEY_DEBUG: ${{ secrets.AMPLITUDE_API_KEY_DEBUG }}
          AMPLITUDE_API_KEY_PRODUCTION: ${{ secrets.AMPLITUDE_API_KEY_PRODUCTION }}
          FASTLANE_SKIP_UPDATE_CHECK: '1'
        working-directory: ./application
        run: |
          sudo chmod -R a+w /var/lib/gems/
          fastlane check coverage:true

      - name: Create coverage
        if: (github.event_name != 'push')
        working-directory: ./application
        env:
          USER: ${{ secrets.GH_USER }}
          TOKEN: ${{ secrets.GH_TOKEN }}
          MIN_CHANGE: -1
        run: |
          last_lcov_url=`curl -u $USER:$TOKEN -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/xaynetwork/xayn_discovery_app/actions/artifacts | jq -r '.artifacts[0].archive_download_url'`
          if [ -n "$last_lcov_url" ]; then
            curl -L -H "Accept: application/vnd.github.v3+json" -o last_lcov.zip -u $USER:$TOKEN $last_lcov_url
            unzip last_lcov.zip -d last_lcov
          fi
          current_cov=`genhtml coverage/lcov.info -o coverage/html | grep -o '[^ ]*%' | sed 's/%//g'`
          if [ -f "last_lcov/lcov.info" ]; then
            last_cov=`genhtml last_lcov/lcov.info -o coverage/last-html | grep -o '[^ ]*%' | sed 's/%//g'`
          else
            last_cov=0
          fi
          echo "Last Coverage: $last_cov %"
          echo "Current Coverage: $current_cov %"
          (( $(echo "$current_cov - $last_cov > 0" | bc -l) )) && echo "Good Job, you increased the coverage."
          (( $(echo "$current_cov - $last_cov > $MIN_CHANGE" | bc -l) )) || echo "Too bad, you decreased the coverage more than 1%"
          (( $(echo "$current_cov - $last_cov > $MIN_CHANGE" | bc -l) )) && STATE=success || STATE=failure
          echo "coverage=$STATE" >> $GITHUB_ENV
          echo "coverage_description=\"coverage: $current_cov last $last_cov\"" >> $GITHUB_ENV

      - name: Show coverage status
        uses: actions/github-script@v3
        env:
          COVERAGE : ${{ env.coverage }}
          COVERAGE_DESCRIPTION : ${{ env.coverage_description }}
        with:
          script: |
            const { COVERAGE, COVERAGE_DESCRIPTION } = process.env
            if ( COVERAGE == "failure") {
              core.setFailed(COVERAGE_DESCRIPTION)
            }

      - uses: actions/upload-artifact@v2
        if: (github.event_name == 'push')
        with:
          name: lcov
          path: application/coverage/lcov.info
